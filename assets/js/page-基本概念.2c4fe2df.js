(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{615:function(t,a,e){"use strict";e.r(a);var s=e(1),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-base58"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-base58"}},[t._v("#")]),t._v(" 1. Base58")]),t._v(" "),a("p",[t._v('Base58 是用于比特币（Bitcoin）中使用的一种独特的编码方式，主要用于产生 Bitcoin 的钱包地址。相比 Base64，Base58 不使用数字 "0"，字母大写 "O"，字母大写 "I"，和字母小写 "l"，以及 "+" 和 "/" 符号。')]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/Base58",target:"_blank",rel:"noopener noreferrer"}},[t._v("Base58 - 维基百科"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_2-哈希碰撞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-哈希碰撞"}},[t._v("#")]),t._v(" 2. 哈希碰撞")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("calculate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" exponent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v(" exponent\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("ul",[a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2018/09/hash-collision-and-birthday-attack.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("哈希碰撞与生日攻击 - 阮一峰"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"_3-数字签名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-数字签名"}},[t._v("#")]),t._v(" 3. 数字签名")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数字签名的三个作用：防伪造，防篡改，防抵赖。")])]),t._v(" "),a("li",[a("p",[t._v("比特币采用的 ECDSA 签名算法需要一个私钥和公钥组成的秘钥对：私钥本质上就是一个 "),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",{attrs:{xmlns:"http://www.w3.org/1998/Math/MathML"}},[a("semantics",[a("mrow",[a("mn",[t._v("1")]),a("mtext",[t._v("～")]),a("msup",[a("mn",[t._v("2")]),a("mn",[t._v("256")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("1 ～ 2^{256}")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"base"},[a("span",{staticClass:"strut",staticStyle:{height:"0.8141em"}}),a("span",{staticClass:"mord"},[t._v("1")]),a("span",{staticClass:"mord cjk_fallback"},[t._v("～")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord"},[t._v("2")]),a("span",{staticClass:"msupsub"},[a("span",{staticClass:"vlist-t"},[a("span",{staticClass:"vlist-r"},[a("span",{staticClass:"vlist",staticStyle:{height:"0.8141em"}},[a("span",{staticStyle:{top:"-3.063em","margin-right":"0.05em"}},[a("span",{staticClass:"pstrut",staticStyle:{height:"2.7em"}}),a("span",{staticClass:"sizing reset-size6 size3 mtight"},[a("span",{staticClass:"mord mtight"},[a("span",{staticClass:"mord mtight"},[t._v("256")])])])])])])])])])])])]),t._v(" 的随机数，公钥是由私钥根据 ECDSA 算法推算出来的，通过私钥可以很容易推算出公钥，所以不必保存公钥，但是，通过公钥无法反推私钥，只能暴力破解。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1311929746325537",target:"_blank",rel:"noopener noreferrer"}},[t._v("P2P 交易原理 - 廖雪峰"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207687429747616",target:"_blank",rel:"noopener noreferrer"}},[t._v("签名 - 廖雪峰"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2011/08/what_is_a_digital_signature.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("数字签名是什么？ - 阮一峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_4-公私钥与地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-公私钥与地址"}},[t._v("#")]),t._v(" 4. 公私钥与地址")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("比特币的公钥是根据私钥由 ECDSA 算法推算出来的，公钥有压缩和非压缩两种表示方法，可互相转换。比特币的地址是公钥哈希的编码，并不是公钥本身，通过公钥可推导出地址。通过地址不可推导出公钥，通过公钥不可推导出私钥。")]),t._v(" "),a("img",{staticClass:"lazy",attrs:{src:t.$withBase("/images/Block-Chain/比特币地址生成.png"),loading:"lazy"}})]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1210215537429856",target:"_blank",rel:"noopener noreferrer"}},[t._v("公钥和地址 - 廖雪峰"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"http://www.gobittest.appspot.com/Address",target:"_blank",rel:"noopener noreferrer"}},[t._v("Addresses - Bitcoin Tests"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_5-比特币支付"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-比特币支付"}},[t._v("#")]),t._v(" 5. 比特币支付")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("比特币支付的本质是由程序触发的数字资产转移。比特币的支付脚本就是对输入的两个数据视作签名和公钥，然后先验证公钥哈希是否与地址相同，再根据公钥验证签名，这种标准脚本称之为 P2PKH（Pay to Public Key Hash）脚本。")])]),t._v(" "),a("li",[a("p",[t._v("由此催生出了智能合约：当一个预先编好的条件被触发时，智能合约可以自动执行相应的程序，自动完成数字资产的转移。保险、贷款等金融活动在将来都可以以智能合约的形式执行。智能合约以程序来替代传统的纸质文件条款，并由计算机强制执行，将具有更高的更低的信任成本和运营成本。")])]),t._v(" "),a("li",[a("p",[t._v("多重签名可以实现 N 个人持有私钥，其中 M 个人同意即可花费资金的功能。多重签名降低了单个私钥丢失的风险。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1311929802948641",target:"_blank",rel:"noopener noreferrer"}},[t._v("可编程支付原理 - 廖雪峰"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207315329092960",target:"_blank",rel:"noopener noreferrer"}},[t._v("多重签名 - 廖雪峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_6-utxo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-utxo"}},[t._v("#")]),t._v(" 6. UTXO")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("比特币区块链使用 UTXO 模型，它没有账户这个概念。重建整个地址-余额数据库需要扫描整个区块链，并按每个交易依次更新记录，即可得到当前状态。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207298275932480",target:"_blank",rel:"noopener noreferrer"}},[t._v("UTXO 模型 - 廖雪峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_7-merkle-tree"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-merkle-tree"}},[t._v("#")]),t._v(" 7. Merkle Tree")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("梅克尔树是一种二叉树，能快速检查和归纳大量数据，可用于验证区块中交易记录的完整性，保证所有交易的不可篡改。")])]),t._v(" "),a("li",[a("p",[t._v("Merkle Root 为 Merkle Tree 顶点，存储在区块头中。")]),t._v(" "),a("img",{staticClass:"lazy",attrs:{src:t.$withBase("/images/Block-Chain/Merkle Tree.png"),loading:"lazy"}})])]),t._v(" "),a("h2",{attrs:{id:"_8-segwit-地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-segwit-地址"}},[t._v("#")]),t._v(" 8. Segwit 地址")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Segwit 地址又称隔离见证地址。比特币延展性攻击的原因是 ECDSA 签名总是有两个有效签名，且可以相互计算。")])]),t._v(" "),a("li",[a("p",[t._v("要解决延展性攻击的问题，有两个办法，一是对交易签名进行归一化（Normalize）。因为 ECDSA 签名后总有两个有效的签名 (r, s) 和 (r, -s mod N)，那只接受数值较小的那个签名，为此比特币引入了一个 SCRIPT_VERIFY_LOW_S 标志仅接受较小值的签名。")])]),t._v(" "),a("li",[a("p",[t._v("另一个办法是把签名数据移到交易之外，这样交易本身的哈希就不会变化。不含签名的交易计算出的哈希称为 wtxid，为此引入了一种新的隔离见证地址。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207366165169216",target:"_blank",rel:"noopener noreferrer"}},[t._v("Segwit 地址 - 廖雪峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_9-分叉"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-分叉"}},[t._v("#")]),t._v(" 9. 分叉")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("伪·软分叉（不分叉）：旧节点接受新区块，新节点也接受旧区块。")])]),t._v(" "),a("li",[a("p",[t._v("真·软分叉：旧节点接受新区块，新节点不接受旧区块。")]),t._v(" "),a("blockquote",[a("ol",[a("li",[t._v("其实没分叉：新节点算力超过 50%。")]),t._v(" "),a("li",[t._v("确实分叉了：新节点算力不到 50%。")])])])]),t._v(" "),a("li",[a("p",[t._v("硬分叉：旧节点不接受新区块。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://learnblockchain.cn/article/849",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于扩容与分叉（上）- maxdeath"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_10-隔离见证"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-隔离见证"}},[t._v("#")]),t._v(" 10. 隔离见证")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("比特币的格式里，允许用脚本来替换签名。签名大概占了交易大小的 2/3 空间（约 150 字节）。")])]),t._v(" "),a("li",[a("p",[t._v("隔离见证区块：每笔交易都被分成了两部分：交易和见证（签名）。交易部分只有 100 字节左右，于是一个 1MB 的区块里面能放 10000 笔交易（原来是 4000 笔）。所有的见证部分，大约 1.5MB - 2MB，都被扔到了后面。")])]),t._v(" "),a("li",[a("p",[t._v("特点：")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("是软分叉甚至不分叉。")]),t._v(" "),a("li",[t._v("理论上来讲可能提高 2-3 倍的交易量。")]),t._v(" "),a("li",[t._v("支持闪电网络，可以将一部分交易挪到链下进行，减轻主链的负担。")]),t._v(" "),a("li",[t._v("会降低比特币的安全性。")])])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://learnblockchain.cn/article/849#%E9%9A%94%E7%A6%BB%E8%A7%81%E8%AF%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("隔离见证 - maxdeath"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://learnblockchain.cn/article/850",target:"_blank",rel:"noopener noreferrer"}},[t._v("关于扩容与分叉（下）- maxdeath"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_11-hd-钱包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-hd-钱包"}},[t._v("#")]),t._v(" 11. HD 钱包")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("HD 钱包采用分层确定性算法通过根扩展私钥计算所有层级的所有子扩展私钥，继而得到扩展公钥和地址。")])]),t._v(" "),a("li",[a("p",[t._v("可以通过普通衍生和硬化衍生两种方式计算扩展子私钥，后者更安全，但对应的扩展公钥无法计算硬化衍生的子扩展公钥。")])]),t._v(" "),a("li",[a("p",[t._v("通过扩展公钥可以在没有扩展私钥的前提下计算所有普通子扩展公钥，此特性可实现观察钱包。")])]),t._v(" "),a("li",[a("p",[t._v("HD 钱包通过 Bloom Filter 可以高效监控链上的所有地址，并根据是否是本地管理的地址决定如何计算钱包余额。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207298278803712",target:"_blank",rel:"noopener noreferrer"}},[t._v("HD 钱包 - 廖雪峰"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1364939807653921",target:"_blank",rel:"noopener noreferrer"}},[t._v("地址监控 - 廖雪峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_12-助记词"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-助记词"}},[t._v("#")]),t._v(" 12. 助记词")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("BIP-39 规范通过使用助记词 + 口令来生成 HD 钱包的种子，用户只需记忆助记词和口令即可随时恢复 HD 钱包。生成助记词的过程是计算机随机产生的，用户只要记住这些助记词，就可以根据助记词推算出 HD 钱包的种子。")])]),t._v(" "),a("li",[a("p",[t._v("助记词的意义就是作为私钥的备份。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207320517404448",target:"_blank",rel:"noopener noreferrer"}},[t._v("助记词 - 廖雪峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_13-以太坊"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-以太坊"}},[t._v("#")]),t._v(" 13. 以太坊")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("以太坊采用账户余额模型，通常情况下一个以太坊地址已够用。如果要生成多个地址，可继续派生 m/44'/60'/0'/0/1、m/44'/60'/0'/0/2 等。")])]),t._v(" "),a("li",[a("p",[t._v("以太坊的私钥和公钥采用和比特币一样的 ECDSA 算法和 secp256k1 曲线，并且可以复用比特币的 HD 钱包助记词。")])]),t._v(" "),a("li",[a("p",[t._v("比特币每隔 2015 个区块调整挖矿难度。以太坊每个区块都会调整挖矿难度。")]),t._v(" "),a("blockquote",[a("p",[t._v("比特币设计时本来打算每 2016 个区块调整一次难度，也就是两周一次，但是由于第一版代码的一个 bug，实际调整周期是 2015 个区块。")])])]),t._v(" "),a("li",[a("p",[t._v("地址生成。")]),t._v(" "),a("img",{staticClass:"lazy",attrs:{src:t.$withBase("/images/Block-Chain/以太坊地址生成.png"),loading:"lazy"}})]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207298477260480",target:"_blank",rel:"noopener noreferrer"}},[t._v("以太坊/账户 - 廖雪峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_14-智能合约"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-智能合约"}},[t._v("#")]),t._v(" 14. 智能合约")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("所谓智能合约，就是一种运行在区块链上的程序（用脚本更形象点）。以太坊通过 EVM 虚拟机执行智能合约代码。")])]),t._v(" "),a("li",[a("p",[t._v("合约被部署后将自动获得一个地址，并可像外部账户一样存取 Ether，还可以存储状态数据。只能被动地被外部账户调用，但在执行时可以调用其他合约的公共函数。")])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://www.liaoxuefeng.com/wiki/1207298049439968/1207297939801024",target:"_blank",rel:"noopener noreferrer"}},[t._v("智能合约 - 廖雪峰"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"_15-术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15-术语"}},[t._v("#")]),t._v(" 15. 术语")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("手续费 = GasUsed * GasPrice")])]),t._v(" "),a("li",[a("p",[t._v("GasUsed：Gas 实际消耗量。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("区块：所有交易消耗的 Gas 总量。")]),t._v(" "),a("li",[t._v("交易：实际消耗的 Gas。一笔普通转账交易固定消耗 21000 Gas，也是最小 Gas 消耗量。")])])])]),t._v(" "),a("li",[a("p",[t._v("GasPrice：Gas 消耗单价，用户交易前设置，矿工可根据 GasPrice 选择是否打包。")])]),t._v(" "),a("li",[a("p",[t._v("GasLimit：Gas 可消耗上限。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("区块：所有交易 Gas 消耗上限，防止无法停止（死循环）的合约来阻塞网络。每个区块的矿工可调整区块 GasLimit，任意加减 1/2024（0.0976%）。")]),t._v(" "),a("li",[t._v("交易：用户设置交易可消耗的 Gas 上限。如果实际 Gas 消耗超出用户设置的 GasLimit，那么该交易失败，消耗的 Gas 不会返还（消耗了算力）。如果实际 Gas 消耗小于用户设置的 GasLimit，那么超出的 Gas 会返还用户。")])])])]),t._v(" "),a("li",[a("p",[t._v("Nonce：随机数。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("区块：工作量证明，也就是猜出的一个正确答案，代表挖矿成功。")]),t._v(" "),a("li",[t._v("账户：防止多重交易（双花），交易自增长（消息调用不会增长）。如果用户自定义交易 Nonce 大于账户 Nonce + 1，那么交易会失败。如果一个区块上用户有两个交易的 Nonce 相同（自增长 Nonce），矿工可选择一笔交易打包，另一笔交易丢弃。矿工当然会选 GasPrice 高的那笔哟，这样可以在上一笔交易打包前，发出另一笔 Nonce 一样，但 GasPrice 较高的交易，来取消上一笔交易（看手速与运气的时候了）。")])])])]),t._v(" "),a("li",[a("p",[t._v("代币标准：如果同一个集合的两个物品具有不同的特征，那么这两个物品是非同质的，而同质是指某个部分或数量可以被另一个同等部分或数量所代替。")]),t._v(" "),a("blockquote",[a("ul",[a("li",[t._v("ERC20：同质代币（BNB 等），可置换、可细分。")]),t._v(" "),a("li",[t._v("ERC721：非同质代币（CryptoKitties 等），不可置换、不可细分（Token 最小单位 1）。")])])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"https://learnblockchain.cn/2018/01/11/guide",target:"_blank",rel:"noopener noreferrer"}},[t._v("区块链技术入门学习指引 - Tiny 熊"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);a.default=r.exports}}]);